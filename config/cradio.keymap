// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// Define Layer Names
#define L_MAIN  0
#define L_ONE   1
#define L_TWO   2
#define L_THREE 3

// Home row mods macro - usage example: HRMR(N,        E,         I,        O)
#define HRML(k1,k2,k3,k4) &ht LSHFT k1  &ht LALT k2  &ht LCTRL k3  &ht LGUI k4
#define HRMR(k1,k2,k3,k4) &ht RGUI k1  &ht RCTRL k2  &ht RALT k3  &ht RSHFT k4

// Thumb row layer macro
#define TRLR(k1,k2,k3,k4) &lt L_TWO k1	&lt L_ONE k2	&lt L_ONE k3	&lt L_TWO k4


// COMBOS
/ {
    combos {
        compatible = "zmk,combos";
        combo_colon {
            timeout-ms = <50>;
            key-positions = <11 12>;
            bindings = <&kp COLON>;
        };
		
		combo_semicolon {
            timeout-ms = <50>;
            key-positions = <11 13>;
            bindings = <&kp SEMICOLON>;
        };
		
		combo_ctrl_shft_esc {
            timeout-ms = <50>;
            key-positions = <0 10 20>;
            bindings = <&kp LCTRL &kp LSHFT &kp ESC>;
        };
		
		combo_printscreen {
            timeout-ms = <50>;
            key-positions = <26 27>;
            bindings = <&kp PSCRN>;
        };
		
		combo_Y {
            timeout-ms = <50>;
            key-positions = <26 28>;
            bindings = <&kp SEMICOLON>;
        };
		
		combo_cut {
            timeout-ms = <50>;
            key-positions = <20 21>;
            bindings = <&kp LCTRL &kp X>;
        };
		
		combo_copy {
            timeout-ms = <50>;
            key-positions = <20 22>;
            bindings = <&kp LCTRL &kp C>;
        };
		
		combo_paste {
            timeout-ms = <50>;
            key-positions = <20 23>;
            bindings = <&kp LCTRL &kp V>;
        };
    };
};


/ {
    behaviors {
        ht: hold_tap {
            label = "hold_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <300>;
            quick-tap-ms = <200>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };
    };

    //conditional_layers {
    //    compatible = "zmk,conditional-layers";
    //    tri_layer {
    //        if-layers = <1 2>;
    //        then-layer = <3>;
    //    };
    //};

    keymap {
        compatible = "zmk,keymap";
//********************************************************************************************************************************		
//		colmak_layer {
//            bindings = <
//        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
//        //│  Q       │  W       │  F       │  P       │  B       │   │  J       │  L       │  U       │  Y       │          │
//          &ht LALT Q   &kp W      &kp F      &kp P      &kp B          &kp J     &kp L      &kp U      &kp Y     &ht LALT BSPC
//        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
//        //│  A       │  R       │  S       │  T       │  G       │   │  M       │  N       │  E       │  I       │  O       │
//          &ht LCTRL A &ht LGUI R  &kp S      &kp T      &kp G          &kp M      &kp N      &kp E    &ht RGUI I &ht RCTRL O
//        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
//        //│  Z       │  X       │  C       │  D       │  V       │   │  K       │  H       │ , <      │ . >      │ ' "      │
//          &ht LSHFT Z  &kp X      &kp C      &kp D      &kp V          &kp K      &kp H      &kp COMMA  &kp DOT  &ht RSHFT SQT
//        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
//										 TRLR(SPACE,     TAB,           BSPC,      ENTER)	
//        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
//            >;
//        };
//********************************************************************************************************************************	
		
        hands_down_gold_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│  J       │  G       │  M       │  P       │  V       │   │  Z       │  / ?     │  .       │  ' "     │  ESCAPE  │
            &kp J      &kp G      &kp M      &kp P      &kp V          &kp Z      &kp SLASH  &kp DOT   &kp APOS    &kp ESC
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  R       │  S       │  N       │  D       │  B       │   │  ,       │  A       │  E       │  I       │  H       │
          &ht LCTRL R &ht LGUI S  &kp N      &kp D      &kp B          &kp COMMA  &kp A      &kp E     &ht RGUI I &ht RCTRL H
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  X       │  F       │  L       │  C       │  W       │   │  Q       │  U       │  O       │  Y       │  K       │
          &ht LSHFT X &ht LALT F  &kp L      &kp C      &kp W          &kp Q      &kp U      &kp O     &ht LALT Y &ht RSHFT K
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
        //								   | to lay2  | to lay1  |   |  to lay1 |  to lay2 |
										TRLR( T,         T,            ENTER,      SPACE)
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };
		


        one_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│  /       │  1       │  2       │  3       │  +       │   │ MUTE     │ HOME     │ UP       │ END      │          │
            &kp SLASH  &kp N1     &kp N2     &kp N3     &kp PLUS      &kp C_MUTE  &kp HOME   &kp UARW   &kp END    &kp BSPC
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  *       │  4       │  5       │  6       │  0       │   │ VOL UP   │ LEFT     │ DOWN     │ RIGHT    │ DELETE   │
            &kp ASTRK  &kp N4     &kp N5     &kp N6     &kp N0       &kp C_VOL_UP &kp LARW   &kp DARW    &kp RARW  &kp DEL
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  =       │  7       │  8       │  9       │  -       │   │ VOL DOWN │ PAGE DN  │          │ PAGE UP  │          │
           &kp EQUAL   &kp N7     &kp N8     &kp N9     &kp MINUS    &kp C_VOL_DN &kp PG_DN  &trans     &kp PG_UP  &trans
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &kp TAB   &mo L_THREE    &kp BSPC    &kp DEL
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

        two_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│    ~     │  $       │  [       │  ]       │   ^      │   │  `       │   |      │  &       │   /      │          │
            &kp TILDE &kp DOLLAR  &kp LBKT   &kp RBKT   &kp CARET     &kp GRAVE  &kp PIPE   &kp AMPS   &kp SLASH   &trans
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  %       │  @       │  (       │  )       │  \       │   │  <       │  >       │  -       │  *       │  _       │
            &kp PRCNT  &kp AT     &kp LPAR   &kp RPAR   &kp BSLH       &kp LT     &kp GT     &kp MINUS  &kp STAR   &kp UNDER
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│          │  #       │  {       │  }       │  CAPS    │   │ PRNT SCRN│  =       │  !       │  ?       │          |
            &trans     &kp POUND  &kp LBRC   &kp RBRC  &caps_word      &kp PSCRN  &kp EQUAL  &kp EXCL   &kp QMARK  &trans 
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &trans     &trans         &trans     &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

        tri_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│          │ PROFILE 0│ PROFILE 1│ PROFILE 2│ CLEAR BT │   │  RESET   │ FUNC 1   │ FUNC 2   │ FUNC 3   │ FUNC 4   │
            &trans &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_CLR  &sys_reset  &kp F1     &kp F2     &kp F3     &kp F4
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  CTRL    │  LGUI    │  ALT     │          │          │   │          │ FUNC 5   │ FUNC 6   │ FUNC 7   │ FUNC 8   │
           &kp LCTRL   &kp LGUI   &kp LALT   &trans     &trans         &trans     &kp F5     &kp F6     &kp F7     &kp F8
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ SHIFT    │          │          │          │BOOTLOADER│   │          │ FUNC 9   │ FUNC 10  │ FUNC 11  │ FUNC 12  │
            &kp LSHFT  &trans     &trans     &trans    &bootloader     &trans     &kp F9     &kp F10    &kp F11    &kp F12
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &trans     &trans         &trans     &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };
    };
};
